[{"E:\\react\\tic-tac-toe\\src\\index.js":"1","E:\\react\\tic-tac-toe\\src\\App.js":"2"},{"size":411,"mtime":1609876489249,"results":"3","hashOfConfig":"4"},{"size":2419,"mtime":1609963219387,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"hqhub5",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"E:\\react\\tic-tac-toe\\src\\index.js",[],["12","13"],"E:\\react\\tic-tac-toe\\src\\App.js",["14"],"import './App.css';\nimport React ,{useState} from 'react';\nfunction App() {\n  const [turn,setTurn]=useState(\"X\");\n  const [gameFinish,setGameFinis]=useState(false);\n  const [board,setBoard]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\n  const [countMove,setCountMove]=useState(0);\n  const [winner,setWinner]=useState(\"\");\nlet i=1;\n\n  const handleClick=e=>{\n    if(gameFinish) return ;\n    let  newArr=[...board];\n    if(newArr[e.target.dataset.squard] ===\"\" ){\n      newArr[e.target.dataset.squard]=turn;\n      board[e.target.dataset.squard]=turn;\n      e.target.innerText=turn;\n      turn === \"X\" ? setTurn(\"O\") : setTurn(\"X\");\n       i=countMove+1;\n      setCountMove(i)\n    }\n    let result =winnerControl();\n    if(result === \"X\"){\n      setWinner(\"X\");\n      setGameFinis(true);\n    }else if(result===\"O\"){\n      setWinner(\"O\");\n      setGameFinis(true);\n    }else if(result===\"Beraberlik\"){\n      setWinner(result);\n      setGameFinis(true)\n    }\n  }\n\n  function winnerControl(){\n    let arr=[...board];\n    const winnerMove=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];  \n    for(let i=0;i<winnerMove.length;i++){\n      if(arr[winnerMove[i][0]] === arr[winnerMove[i][1]] &&  arr[winnerMove[i][1]] ===  arr[winnerMove[i][2]] ){ \n        if(arr[winnerMove[i][0]] ===\"X\")\n            return arr[winnerMove[i][0]]\n        else if(arr[winnerMove[i][0]] ===\"O\") \n            return arr[winnerMove[i][0]]   \n        }\n    }\n    if(countMove === 8){\n      return \"Beraberlik\";\n    } \n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"game\">\n        <div id=\"head\">\n          <h2>Tic Tac Toe </h2>\n          <h3>{winner!==\"\" ?<WinnerShow name={winner}/>: null}</h3>\n        </div>\n        <div id=\"board\" onClick={(e)=>handleClick(e)}>\n          <div className=\"squard\" data-squard=\"0\"></div>\n          <div className=\"squard\" data-squard=\"1\"></div>\n          <div className=\"squard\" data-squard=\"2\"></div>\n          <div className=\"squard\" data-squard=\"3\"></div>\n          <div className=\"squard\" data-squard=\"4\"></div>\n          <div className=\"squard\" data-squard=\"5\"></div>\n          <div className=\"squard\" data-squard=\"6\"></div>\n          <div className=\"squard\" data-squard=\"7\"></div>\n          <div className=\"squard\" data-squard=\"8\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction WinnerShow(props){\n  return(\n    <span>KAZANAN: {props.name}</span>\n  )\n}\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":6,"column":16,"nodeType":"21","messageId":"22","endLine":6,"endColumn":24},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-unused-vars","'setBoard' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]